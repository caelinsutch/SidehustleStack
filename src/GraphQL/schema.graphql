type Query {
    publishedPlatforms: [PlatformMVC]!
    allPlatforms: [PlatformMVC]!
    platform(id: ID!): PlatformMVC
    allSuggestions: [SuggestionMVC]!
    suggestion(id: ID!): SuggestionMVC
}

type Mutation {
    createPlatform(platform: PlatformInput): PlatformMVC!
    updatePlatform(id: ID!, data: UpdatePlatformInput!): PlatformMVC!
    createSuggestion(suggestion: SuggestionInput): SuggestionMVC!
    updateSuggestion(id: ID!, data: UpdateSuggestionInput!): SuggestionMVC!
    addReview(id: ID!, review: ReviewInput): PlatformMVC
    vote(id: ID!, amount: Int!): PlatformMVC
}

input SuggestionInput {
    name: String!
    website: String!
    platformType: PlatformType!
}

input UpdateSuggestionInput {
    name: String
    website: String
    platformType: PlatformType
}

input PlatformInput {
    name: String!
    companyLogo: String!
    website: String!
    platformType: PlatformType!
    tags: [String!]
    founded: String!
    headquarteredIn: String!
    funding: Funding!
    description: String!
    typeOfWork: [TypeOfWork!]!
    category: CategoryOfWork!
    requiresDigitalAudience: ExistingDigitalAudienceRequired!
    applicationRequired: ApplicationRequired!
    remoteWork: Boolean!
    minimumAge: Int!
    equipmentQualSkills: [EquipmentQualSkills!]!
    averageEarnings: AmountPerInput!
    timeToFirstDollar: AmountPerInput!
    numPeopleMakingMoney: Int!
    geographicalFocus: GeographicalFocus!
    founderMessage: String
    founderTwitter: String
    affiliateLink: String
    founderName: String!
    email: String!
    profitModel: ProfitModel!
    profitModelDescription: String!
    platformPricing: String!
    requirements: [String!]
}
input PlatformRecommendationInput {
    name: String!
    companyLogo: String!
    website: String!
}

input UpdatePlatformInput {
    name: String
    status: Status
    platformType: PlatformType
    companyLogo: String
    website: String
    founded: String
    headquarteredIn: String
    funding: Funding
    description: String
    typeOfWork: [TypeOfWork!]
    category: CategoryOfWork
    requiresDigitalAudience: ExistingDigitalAudienceRequired
    applicationRequired: ApplicationRequired
    remoteWork: Boolean
    minimumAge: Int
    equipmentQualSkills: [EquipmentQualSkills!]
    averageEarnings: AmountPerInputUpdate
    timeToFirstDollar: AmountPerInput
    numPeopleMakingMoney: Int
    geographicalFocus: GeographicalFocus
    profitModel: ProfitModel
    profitModelDescription: String
    affiliateLink: String
    founderMessage: String
    founderTwitter: String
    founderName: String
    email: String
    tags: [String!]
    reviews: [ReviewInput!]
    platformPricing: String
    requirements: [String!]
}

input LinkInput {
    label: String
    url: String
}

input AmountPerInput {
    amount: Int!
    per: String!
}

input AmountPerInputUpdate {
    amount: Int
    per: String
}

input ReviewInput {
    rating: Int!
    description: String!
    author: String
}

type SuggestionMVC @entity {
    id: ID! @id
    status: Status! @column
    platformType: PlatformType! @column
    name: String! @column
    website: String! @column
}

type PlatformMVC @entity {
    id: ID! @id
    status: Status! @column
    platformType: PlatformType! @column
    name: String! @column
    website: String! @column
    companyLogo: String @column
    founded: String @column
    headquarteredIn: String @column
    funding: Funding @column
    description: String @column
    typeOfWork: [TypeOfWork!] @column
    category: CategoryOfWork @column
    requiresDigitalAudience: ExistingDigitalAudienceRequired @column
    applicationRequired: ApplicationRequired @column
    remoteWork: Boolean @column
    minimumAge: Int @column
    equipmentQualSkills: [EquipmentQualSkills!] @column
    averageEarnings: AmountPer @column
    timeToFirstDollar: AmountPer @column
    profitModel: ProfitModel @column
    profitModelDescription: String @column
    geographicalFocus: GeographicalFocus @column
    affiliateLink: String @column
    founderMessage: String @column
    founderTwitter: String @column
    founderName: String @column
    numPeopleMakingMoney: Int @column
    email: String @column
    tags: [String!] @column
    reviews: [Review!] @embedded
    score: Int @column
    platformPricing: String @column
    requirements: [String!] @column
}

type AmountPer @entity(embedded: true) {
    amount: Int! @column
    per: String! @column
}

type Review @entity(embedded: true) {
    rating: Int! @column
    description: String! @column
    author: String! @column
    status: Status! @column
}

enum ProfitModel {
    PERCENTAGE_TAKE_RATE
    SUBSCRIPTION_FEE
    FREE
    OTHER
}

enum GeographicalFocus {
    WORLDWIDE
    NORTH_AMERICA
    SOUTH_AMERICA
    EUROPE
    ASIA
    AFRICA
    MIDDLE_EAST
    AUSTRALIA
}

enum PlatformType {
    TOOL
    PLATFORM
}

enum Funding {
    ZERO
    LESS_FIVE_MIL
    FIVE_TO_TEN_MIL
    TEN_PLUS_MIL
    PUBLIC_COMPANY
    BOOTSTRAPPED
    CURRENTLY_RAISING
    UNDISCLOSED
}

enum EquipmentQualSkills {
    COMPUTER
    SMARTPHONE
    CAR
    MICROPHONE
    BANK_ACCOUNT
    BACHELORS_DEGREE
    NATIVE_ENGLISH
    CHILD_CARE_EXPERIENCE
    ANIMAL_CARE_EXPERIENCE
    BACKGROUND_CHECK
    OTHER
}

enum CategoryOfWork {
    GIG
    CREATOR
    PROJECT_BASED
    SMB
    RENTALS
    OTHER
}

enum ExistingDigitalAudienceRequired {
    YES
    NO
    RECOMMENDED
}

enum ApplicationRequired {
    YES
    YES_SELECTIVE
    NO
}

enum TypeOfWork {
    ADULT_CONTENT_CREATOR
    AUDIO_CONTENT_CREATOR
    CHEF
    COACH
    COMMUNITY_LEADER
    CONTENT_CREATOR
    ECOMMERCE
    EVENT_ORGANIZER
    DRIVER
    FITNESS_INSTRUCTOR
    GAMER
    HEALTH
    LIVESTREAMER
    PERSONAL_SHOPPER
    PET_CARETAKER
    PODCASTER
    RENTALS
    RESELLER
    RESTAURANT_WORKER
    SALESPERSON
    TASKS_AND_SERVICES
    TEACHER
    TECH
    VIDEO_COURSE_CREATOR
    WRITER
}

enum Status {
    IN_REVIEW
    PUBLISHED
}
